# -Wall # This enables all the warnings about constructions that some users consider questionable
# -Wextra #This enables some extra warning flags that are not enabled by -Wall
# -Werror # Make all warnings into errors.
# -Wpedantic # Issue all the warnings demanded by strict ISO C and ISO C++
add_compile_options(-Wall -Wextra -Werror -Wpedantic)


# Detect and Set Supported C++ Version
CHECK_CXX_COMPILER_FLAG("-std=c++11" COMPILER_SUPPORTS_CXX11)
CHECK_CXX_COMPILER_FLAG("-std=c++0x" COMPILER_SUPPORTS_CXX0X)
if(COMPILER_SUPPORTS_CXX11)
    set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=c++11")
elseif(COMPILER_SUPPORTS_CXX0X)
    set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=c++0x")
else()
    message(STATUS "The compiler ${CMAKE_CXX_COMPILER} has no C++11/C++0x support. Please use a different C++ compiler.")
endif()


# Most Frequent Variables
${NAME}
${PROJECT_NAME}
${CMAKE_PROJECT_NAME}

${CMAKE_SOURCE_DIR}
${CMAKE_BINARY_DIR}
${CMAKE_CURRENT_SOURCE_DIR}
${CMAKE_CURRENT_BINARY_DIR}
${PROJECT_SOURCE_DIR}
${PROJECT_BINARY_DIR}
${<PROJECT-NAME>_SOURCE_DIR}
${<PROJECT-NAME>_BINARY_DIR}
